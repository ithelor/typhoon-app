@use '~styles/partials/variables';
@use '~styles/partials/mixins';

.container {
  height: 100vh;

  position: sticky;
  top: 0;

  background: var(--color-background);

  transition: background var(--transition-duration) var(--transition-timing-function);

  .navMenu {
    height: calc(100vh - var(--content-margin) - 2rem);

    display: flex;
    flex-direction: column;
    flex-shrink: 0;
    margin-top: var(--content-margin);

    overflow-x: hidden;
    overflow-y: auto;

    // @include mixins.ScrollShadow(var(--color-background));

    &::-webkit-scrollbar {
      display: none;
    }

    .navlink {
      min-height: 3rem;

      display: grid;
      grid-template-columns: auto auto 1fr;
      gap: 1rem;
      align-items: center;

      color: var(--color-info-dark);

      transition: all 0.1s var(--transition-timing-function);

      &:hover {
        color: var(--color-primary);
        background: var(--color-dark);
      }

      &.marquee {
        &:hover {
          h3 span {
            @include mixins.Marquee();
          }
        }
      }

      svg {
        margin-left: 2rem;

        width: 1.5rem;
        height: 1.5rem;
      }

      h3 {
        font-weight: 500;
        font-size: 0.875rem;

        @include mixins.Ellipsis();
      }

      &.active {
        margin-left: -4px;

        color: var(--color-primary);
        background: var(--color-dark);

        &::before {
          content: '';
          width: 8px;
          height: 100%;
          position: relative;
          left: 0;
          background: var(--color-primary);
        }

        svg {
          margin-left: calc(1rem - 3px);
        }
      }

      &.disabled {
        @include mixins.Disabled();
      }
    }
  }

  @media screen and (max-width: variables.$mobile-width) {
    width: var(--sidebar-width);
    position: fixed;
    left: calc(0px - var(--sidebar-width));

    padding-right: 2rem;

    box-shadow: 1rem 3rem 4rem var(--color-dark);
    z-index: 3;

    transition: left var(--transition-duration) ease-in-out;

    &.open {
      left: 0;
    }
  }
}
